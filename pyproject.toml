[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "final-project"
description = 'APC524 final project of Jalal Butt, Gabriel Mantegna and Manuel Kreutle'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [
  { name = "jalalbutt", email = "jb108@princeton.edu" },
  { name = "jmantegna", email = "gabriel.mantegna@gmail.com" },
  { name = "manuel-k2", email = "kreutle@princeton.edu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["numpy","cvxpy","pandas"]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/unknown/final-project#readme"
Issues = "https://github.com/unknown/final-project/issues"
Source = "https://github.com/unknown/final-project"

[tool.hatch.version]
path = "final_project/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=final_project --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "final_project/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[project.optional-dependencies]
test = [
  "pytest >= 6.0.0",
  "uncertainties >= 3.1.7"
]
docs = [
    "furo",  # Theme
    "myst_parser >=0.13",  # Markdown
    "sphinx >=4.0",
    "sphinx_copybutton",  # Easy code copy button
]

[tool.pytest.ini_options]
pythonpath = [
  "final_project"
]
minversion = "6.0"
addopts = ["-ra", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["tests"]